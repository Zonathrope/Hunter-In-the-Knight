[gd_scene load_steps=7 format=2]

[ext_resource path="res://Enemies/Wolf/scenes/Hurtbox.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=4]
script/source = "extends KinematicBody2D

const MAX_HP = 5
var hp = 5
var damage = 1

var state = IDLE

enum {
  IDLE,
  WANDER,
  SEEK
}

var location = Vector2.ZERO
var velocity = Vector2.ZERO
var acceleration = Vector2.ZERO

var target = Vector2.ZERO

var circle_distance = 40
var circle_radius = 20
var wanderAngle = 20
var angle_change = 10

var dethCounter = 0

const MAX_SPEED = 2500
const MAX_ACCELERATION = 100

func _physics_process(delta):
	if dethCounter > 60:
		starve()
	if	state == SEEK:
		state = WANDER
	var seekArray : Array
	seekArray.append_array(get_parent().getRabbitsArray())
	seekArray.append_array(get_parent().getDeersArray())
	if get_parent().getPlayer() != null:
		seekArray.append(get_parent().getPlayer())
	var distance = 200
	for other in seekArray:
		if is_instance_valid(other):
			var d = global_position.distance_to(other.global_position);
			if ((d > 0) && (d < 100)):
				if d < distance:
					distance = d
					target = other.global_position
					state = SEEK
	match state:
		IDLE:
			if $Timer.is_stopped():
				state = WANDER
				$Timer.start()
				$Timer.wait_time = 2
			velocity *= 0
		WANDER:
			wander(delta)
			if $Timer.is_stopped():
				state = IDLE
				$Timer.start()
				$Timer.wait_time = 1
		SEEK:
			seek(target, delta)
				
	velocity += acceleration
	velocity = velocity.clamped(MAX_SPEED)
	location += velocity 
	location = move_and_slide(location * delta)
	acceleration *= 0 
	dethCounter += delta
	
func wander(delta):
	var circleCenter = Vector2()
	circleCenter = Vector2(velocity.x, velocity.y)
	circleCenter = circleCenter.normalized()
	circleCenter *= circle_distance
	var displacement = Vector2(0, -1)
	displacement *= circle_radius
	displacement = setAngle(displacement, wanderAngle)
	wanderAngle += randi() * angle_change - angle_change * 0.5;
	acceleration = (circleCenter + displacement) * MAX_SPEED * delta
	
func setAngle(vector, value):
	var length = vector.length();
	vector.x = cos(value) * length;
	vector.y = sin(value) * length;
	return vector
	
func _on_Area2D_body_entered(body):
	dethCounter = 0
	if(body.has_method(\"die\")):
		body.die()
	
func seek(target, delta):
	var desired = target - global_position
	desired = desired.normalized()
	desired *= (MAX_SPEED*100 * delta)
	var steer = desired - velocity
	steer = steer.clamped(MAX_ACCELERATION)
	acceleration += steer 
	
func starve():
	queue_free()
		
func handle_hit(taken_damage: int) -> void:
	hp -= taken_damage
	print(taken_damage)
	print(hp)
	if hp <= 0:
		queue_free()
	
"

[sub_resource type="StreamTexture" id=5]
load_path = "res://.import/slime_run_spritesheeet1.png-19cabca336cfbcbbb228381a49b92163.stex"

[sub_resource type="CircleShape2D" id=1]
radius = 6.408

[sub_resource type="CircleShape2D" id=2]
radius = 11.0007

[sub_resource type="CircleShape2D" id=3]
radius = 6.00559

[node name="Wolf" type="KinematicBody2D"]
collision_layer = 2
script = SubResource( 4 )

[node name="Sprite" type="Sprite" parent="."]
texture = SubResource( 5 )
hframes = 6

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2( 0, 0.875 )
shape = SubResource( 1 )

[node name="Area2D" type="Area2D" parent="."]
position = Vector2( 0, 0.875 )

[node name="TauntArea" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 2 )

[node name="Timer" type="Timer" parent="."]
one_shot = true
autostart = true

[node name="Hurtbox" parent="." instance=ExtResource( 1 )]

[node name="Hurtbox2" type="CollisionShape2D" parent="Hurtbox"]
shape = SubResource( 3 )

[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_Area2D_body_exited"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
